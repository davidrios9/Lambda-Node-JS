steps:
    # - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
    #   displayName: 'Prepare analysis on SonarQube'
    #   inputs:
    #       SonarQube: SonarWindows
    #       scannerMode: CLI
    #       configMode: manual
    #       cliProjectKey: '$(Build.Repository.Name)'
    #       cliProjectName: '$(Build.Repository.Name)'
    #       cliProjectVersion: '$(Build.BuildNumber)'
    #       cliSources: '$(System.DefaultWorkingDirectory)'
    #       extraProperties: |
    #           sonar.projectBaseDir=$(System.DefaultWorkingDirectory)
    #           sonar.exclusions=node_modules/**,coverage/**,examples/**,docs/**,src/utils/example.js,
    #           sonar.sources=src
    #           sonar.sourceEncoding=UTF-8  
    #           sonar.tests=$(System.DefaultWorkingDirectory)/src
    #           sonar.test.inclusions=**/*.spec.js    
    #           sonar.language=js
    #           sonar.javascript.coveragePlugin=lcov
    #           sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/lcov.info
    #           sonar.coverage.exclusions=test/**,*.test.ts,**/*.test.ts
    #           sonar.branch.name=$(Build.SourceBranchName)

    - task: Npm@1
      displayName: 'Install Dependencies'
      inputs:
          workingDir: '$(System.DefaultWorkingDirectory)'
          verbose: false

    # - task: Npm@1
    #   displayName: 'Test and Coverage'
    #   inputs:
    #       command: custom
    #       workingDir: '$(System.DefaultWorkingDirectory)'
    #       verbose: false
    #       customCommand: run test

    # - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@4
    #   displayName: 'Run Code Analysis'

    # - task: sonar-buildbreaker@8
    #   inputs:
    #     SonarQube: 'SonarQube'